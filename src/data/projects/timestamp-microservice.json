{
    "name": "API Project: Timestamp Microservice",
    "tagline": "A microservice project, part of Free Code Camp's curriculum",
    "for": "Practice: freeCodeCamp",
    "thumb": "/images/projects/timestamp-microservice-thumb.jpg",
    "logo_inv": "/images/logos/freecodecamp-inverse.svg",
    "url": "//fcc-backend-timestamp-microservice.glitch.me/",
    "desc": "Project summary goes here. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus.",
    "story": ["The API endpoint is GET [project_url]/api/timestamp/:date_string?", "A date string is valid if can be successfully parsed by new Date(date_string). Note that the unix timestamp needs to be an integer (not a string) specifying milliseconds. In our test we will use date strings compliant with ISO-8601 (e.g. \"2016-11-20\") because this will ensure an UTC timestamp.", "If the date string is empty it should be equivalent to trigger new Date(), i.e. the service uses the current timestamp.", "If the date string is valid the api returns a JSON having the structure {\"unix\": <date.getTime()>, \"utc\" : <date.toUTCString()> } e.g. {\"unix\": 1479663089000, \"utc\": \"Sun, 20 Nov 2016 17:31:29 GMT\"}", "If the date string is invalid the api returns a JSON having the structure {\"unix\": null, \"utc\" : \"Invalid Date\" }. It is what you get from the date manipulation functions used above."],
    "pic": "",
    "tech": ["NodeJS", "JavaScript"],
    "type": "Backend",
    "html": "<div class=\"glitch-embed-wrap\" style=\"height: 420px; width: 100%;\"><iframe allow=\"geolocation; microphone; camera; midi; encrypted-media\" src=\"https://glitch.com/embed/#!/embed/fcc-backend-timestamp-microservice?path=README.md&previewSize=100\" alt=\"fcc-backend-timestamp-microservice on Glitch\" style=\"height: 100%; width: 100%; border: 0;\"></iframe></div>"
}